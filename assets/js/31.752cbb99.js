(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{294:function(t,n,a){"use strict";a.r(n);var r=a(13),e=Object(r.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"ray-tracing-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ray-tracing-2"}},[t._v("#")]),t._v(" Ray Tracing 2")]),t._v(" "),n("p",[t._v("https://zhuanlan.zhihu.com/p/116211994\nDLSS 2.0")]),t._v(" "),n("p",[t._v("很多离线渲染的技术已经可以实时渲染，不过需要改进一下")]),t._v(" "),n("p",[t._v("先画包围盒，包围盒再分成格子，格子如果和物体的边缘有交集，则标记，射一簇光，判断所在的格子是否有物体再进行计算")]),t._v(" "),n("p",[t._v("空间划分\nOct-Tree, KD-Tree, BSP-Tree")]),t._v(" "),n("p",[t._v("在做光线追踪之前，先把加速结构建好（KD-Tree）\nKD-Tree有很大的缺点（物体可能存在多个盒子里，还是三角形和AABB不好判断是否有相交），所以不太用")]),t._v(" "),n("p",[t._v("BVH（以物体来划分，而不是空间）解决了一个物体会出现在多个包围盒里，但也有问题，就是对空间的划分不是很严格上的划分\n数据结构，如何让划分的节点比较平衡，快速选择的算法")]),t._v(" "),n("p",[t._v("辐射度量学\n高级的光线追踪都是建立在这个的基础上\nRadiant flux, intensity, irradiance, radiance")])])}),[],!1,null,null,null);n.default=e.exports}}]);